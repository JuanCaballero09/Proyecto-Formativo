  <!DOCTYPE html>
  <html>
    <head>
      <title><%= content_for(:title) || "Bitevia" %></title>
      <meta name="viewport" content="width=device-width,initial-scale=1">
      <meta name="apple-mobile-web-app-capable" content="yes">
      <meta name="mobile-web-app-capable" content="yes">
      <%= csrf_meta_tags %>
      <%= csp_meta_tag %>

      <%= yield :head %>

      <%# Enable PWA manifest for installable apps (make sure to enable in config/routes.rb too!) %>
      <%#= tag.link rel: "manifest", href: pwa_manifest_path(format: :json) %>

      <link rel="icon" href="<%= asset_path('LogoLogo.svg') %>" type="image/svg+xml">
      <link rel="apple-touch-icon" href="<%= asset_path('LogoLogo.svg') %>" type="image/svg+xml">

      <%# Includes all stylesheet files in app/assets/stylesheets %>
      <%= stylesheet_link_tag "bootstrap.min", "data-turbo-track": "reload" %>
      <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
      <%= javascript_importmap_tags %>
    </head>

    <body>
      <header class="header">
        <div class="logo">
            <%= image_tag "LogoLogo.svg" %>
            <h1>Bitevia Software</h1>
        </div>
        <%= form_with url: buscar_path, method: :get, local: true, html: {class: "buscador"} do %>
          <button type="submit">
              <%= image_tag "icons/magnifying-glass-solid.svg", alt: "Buscar" %>
          </button>
          <%= search_field_tag :q, params[:q], placeholder: t("home.navbar.buscar_productos") %>
        <% end %>
      </header>

      <nav class="navbar">
        <div class="links">
          <%= link_to t("home.navbar.inicio"), root_path %>
          <%= link_to t("home.navbar.menu"), products_path %>
          <%= link_to t("home.navbar.categorias"), grupos_path %>

          <% if current_user %>
            <% if current_user.admin? or current_user.empleado? %>
              <%= link_to t("home.navbar.panel_de_administracion"), dashboard_root_path%>
            <% end %>
          <% end %>
        </div>

        <div style="display: flex; flex-direction: row; align-items: center; gap: 15px;">
          <% if I18n.locale == :es %>
            <%= link_to url_for(locale: 'en'), style: "background-color: transparent; box-shadow: none;" do %>
                <% image_tag "icons/estados-unidos-de-america.svg", class: "flag-icon", style: "width: 45px; height: 45px"%>
              <% end %>
          <% else %>
            <%= link_to url_for(locale: 'es'), style: "background-color: transparent; box-shadow: none;" do %>
              <%= image_tag "icons/españa.svg", class: "flag-icon", style: "width: 45px; height: 45px"%>
            <% end %>
          <% end %>   

          <% if current_user %>
            <div class="user">

              <% carrito = Carrito.find_by(id: session[:carrito_id]) %>
              <% total = carrito&.carrito_items&.sum(:cantidad) || 0 %>

              <%= link_to carrito_path do %> 
                <%= image_tag("icons/cart-shopping-solid.svg", alt: "Carrito") %>
                <span id="contador-carrito"><%= total %></span>
              <% end %>
              
              <%= link_to image_tag("icons/user-solid.svg", alt: "Perfil"), clientes_path %>

              <div class="btn-user">
                <%= button_to t("home.navbar.cerrar_sesion"), destroy_user_session_path, method: :delete, data: { turbo_confirm: "¿Estás seguro que quieres cerrar sesión?" } %>
              </div>
            </div>
          <% else %>
            <div class="user">

              <% total = session[:carrito]&.sum { |p| p["cantidad"] } || 0 %>
              <%= link_to carrito_path do %>
                <%= image_tag("icons/cart-shopping-solid.svg", alt: "Carrito") %>
                <span id="contador-carrito"><%= total %></span>
              <% end %>

              <div class="btn-user">
                <%= link_to t("home.navbar.iniciar_sesion"), new_user_session_path%>
              </div>
            </div>
          <% end %>
        </div>

      </nav>

      <main class="vistas">

        
        <%= yield %>

      </main>

      <footer class="footer">

        <div class="social">
          <a href="#">  
            <%= image_tag "icons/instagram-brands.svg" %>
          </a>
          <a href="#">
            <%= image_tag "icons/whatsapp-brands.svg" %>
          </a>
          <a href="#">
            <%= image_tag "icons/tiktok-brands.svg" %>
          </a>
        </div>

        <div class="footer-name">
          <span class="linea"></span>
          <h2 class="nombre-footer">Bitevia</h2>
          <span class="linea"></span>
        </div>

        <p>v3.8.5</p>
        <p>© 2025 Bitevia Software. <%= t("home.footer.derechos_reservados")%></p>
      </footer>
              <%= yield :modals %>

            <!-- Contenedor de alertas -->
      <div id="alert-container">
        <% flash.each do |key, message| %>
          <% css_class = case key.to_sym
            when :notice then "success"
            when :alert  then "error"
            when :error  then "error"
            when :success then "success"
            else "info"
            end %>
          <div class="alert <%= css_class %>"><%= message %></div>
        <% end %>

        <!-- Contenedor vacío para toasts dinámicos -->
        <div id="flash-toast"></div>
      </div>

      <script>
      document.addEventListener("turbo:load", () => {
        const showAlert = (alertElement) => {
          // Mostrar inmediatamente
          alertElement.style.opacity = '1';
          alertElement.style.animation = "alertSlideIn 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards";
          
          // Ocultar después de 3 segundos
          setTimeout(() => {
            alertElement.style.animation = "alertSlideOut 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards";
            
            // Remover completamente después de la animación
            setTimeout(() => {
              if (alertElement.parentNode) {
                alertElement.remove();
              }
            }, 400); // 400ms = duración de alertSlideOut
          }, 3000);
        };

        // Animar alertas que ya existían
        document.querySelectorAll("#alert-container .alert").forEach(showAlert);

        // Observar cambios en el contenedor para nuevas alertas
        const alertContainer = document.getElementById("alert-container");
        if (alertContainer) {
          const observer = new MutationObserver((mutations) => {
            mutations.forEach((mutation) => {
              mutation.addedNodes.forEach((node) => {
                if (node.nodeType === 1 && node.classList.contains("alert")) {
                  showAlert(node);
                }
              });
            });
          });
          observer.observe(alertContainer, { childList: true, subtree: true });
        }

        // Función global para crear alertas dinámicas
        window.showFlashAlert = function(message, type = 'success') {
          const container = document.getElementById('flash-toast');
          if (!container) return;

          const alert = document.createElement('div');
          alert.className = `alert ${type}`;
          alert.textContent = message;
          container.appendChild(alert);
          showAlert(alert);
        };
      });
      </script>
      <%= yield :modals %>
    </body>    
  </html>
