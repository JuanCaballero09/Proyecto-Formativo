<!DOCTYPE html>
<html>
<head>
    <title><%= content_for(:title) || "Bitevia" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= yield :head %>

    <%# Enable PWA manifest for installable apps (make sure to enable in config/routes.rb too!) %>
    <%#= tag.link rel: "manifest", href: pwa_manifest_path(format: :json) %>

    <link rel="icon" href="<%= asset_path('LogoLogo.svg') %>" type="image/svg+xml">
    <link rel="apple-touch-icon" href="<%= asset_path('LogoLogo.svg') %>" type="image/svg+xml">

    <%# Includes all stylesheet files in app/assets/stylesheets %>
    <%= stylesheet_link_tag "bootstrap.min", "data-turbo-track": "reload" %>
    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>

</head>
<body>
    <!-- Contenedor de alertas -->
    <div id="alert-container">
      <% flash.each do |key, message| %>
        <% css_class = case key.to_sym
          when :notice then "success"
          when :alert  then "error"
          when :error  then "error"
          when :success then "success"
          else "info"
          end %>
        <div class="alert <%= css_class %>"><%= message %></div>
      <% end %>

      <!-- Contenedor vacío para toasts dinámicos -->
      <div id="flash-toast"></div>
    </div>

    <%= yield %>
    

    <script>
    document.addEventListener("turbo:load", () => {
      const showAlert = (alertElement) => {
        // Mostrar inmediatamente
        alertElement.style.opacity = '1';
        alertElement.style.animation = "slideDown 0.5s forwards";
        
        // Ocultar después de 3 segundos
        setTimeout(() => {
          alertElement.style.animation = "slideUp 0.5s forwards";
          
          // Remover completamente después de la animación
          setTimeout(() => {
            if (alertElement.parentNode) {
              alertElement.remove();
            }
          }, 500); // 500ms = duración de slideUp
        }, 3000);
      };

      // Animar alertas que ya existían
      document.querySelectorAll("#alert-container .alert").forEach(showAlert);

      // Observar cambios en el contenedor para nuevas alertas
      const alertContainer = document.getElementById("alert-container");
      if (alertContainer) {
        const observer = new MutationObserver((mutations) => {
          mutations.forEach((mutation) => {
            mutation.addedNodes.forEach((node) => {
              if (node.nodeType === 1 && node.classList.contains("alert")) {
                showAlert(node);
              }
            });
          });
        });
        observer.observe(alertContainer, { childList: true, subtree: true });
      }

      // Función global para crear alertas dinámicas
      window.showFlashAlert = function(message, type = 'success') {
        const container = document.getElementById('flash-toast');
        if (!container) return;

        const alert = document.createElement('div');
        alert.className = `alert ${type}`;
        alert.textContent = message;
        container.appendChild(alert);
        showAlert(alert);
      };
    });
    </script>
</body>    
</html>
